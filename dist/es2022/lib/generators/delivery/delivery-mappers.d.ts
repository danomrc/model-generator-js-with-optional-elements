import { ContentTypeElements, ContentTypeModels, ContentTypeSnippetModels, TaxonomyModels } from '@kontent-ai/management-sdk';
import { ContentTypeFileNameResolver, ContentTypeResolver, ContentTypeSnippetFileNameResolver, ContentTypeSnippetResolver, ElementResolver, TaxonomyTypeFileNameResolver, TaxonomyTypeResolver } from '../../models.js';
export type MapContentTypeToDeliveryTypeName = (contentType: ContentTypeModels.ContentType) => string;
export type MapContentTypeSnippetToDeliveryTypeName = (contentTypeSnippet: ContentTypeSnippetModels.ContentTypeSnippet) => string;
export type MapContentTypeIdToObject = (id: string) => ContentTypeModels.ContentType;
export type MapContentTypeSnippetIdToObject = (id: string) => ContentTypeSnippetModels.ContentTypeSnippet;
export type MapContentTypeToFileName = (contentType: ContentTypeModels.ContentType, addExtension: boolean) => string;
export type MapContentTypeSnippetToFileName = (contentTypeSnippet: ContentTypeSnippetModels.ContentTypeSnippet, addExtension: boolean) => string;
export type MapElementToName = (element: ContentTypeElements.ContentTypeElementModel) => string | undefined;
export type MapTaxonomyName = (taxonomy: TaxonomyModels.Taxonomy) => string;
export type MapTaxonomyIdTobject = (id: string) => TaxonomyModels.Taxonomy;
export type MapTaxonomyToFileName = (taxonomy: TaxonomyModels.Taxonomy, addExtension: boolean) => string;
export declare function getMapContentTypeToDeliveryTypeName(resolver?: ContentTypeResolver): MapContentTypeToDeliveryTypeName;
export declare function getMapContentTypeSnippetToDeliveryTypeName(resolver?: ContentTypeSnippetResolver): MapContentTypeSnippetToDeliveryTypeName;
export declare function getMapContentTypeIdToObject(types: ContentTypeModels.ContentType[]): MapContentTypeIdToObject;
export declare function getMapContentTypeSnippetIdToObject(snippets: ContentTypeSnippetModels.ContentTypeSnippet[]): MapContentTypeSnippetIdToObject;
export declare function getMapContentTypeToFileName(resolver?: ContentTypeFileNameResolver): MapContentTypeToFileName;
export declare function getMapContentTypeSnippetToFileName(resolver?: ContentTypeSnippetFileNameResolver): MapContentTypeSnippetToFileName;
export declare function getMapElementToName(resolver?: ElementResolver): MapElementToName;
export declare function getMapTaxonomyName(resolver?: TaxonomyTypeResolver): MapTaxonomyName;
export declare function getMapTaxonomyToFileName(resolver?: TaxonomyTypeFileNameResolver): MapTaxonomyToFileName;
export declare function getMapTaxonomyIdTobject(taxonomies: TaxonomyModels.Taxonomy[]): MapTaxonomyIdTobject;
